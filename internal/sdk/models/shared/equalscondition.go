// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"github.com/epilot-dev/terraform-provider-epilot-portal/internal/sdk/internal/utils"
)

type Operation string

const (
	OperationEquals Operation = "equals"
)

func (e Operation) ToPointer() *Operation {
	return &e
}
func (e *Operation) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "equals":
		*e = Operation(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Operation: %v", v)
	}
}

// EqualsCondition - Check if attribute equals to any of the values
type EqualsCondition struct {
	Attribute string    `json:"attribute"`
	Operation Operation `json:"operation"`
	Values    []any     `json:"values"`
}

func (e EqualsCondition) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(e, "", false)
}

func (e *EqualsCondition) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &e, "", false, []string{"attribute", "operation", "values"}); err != nil {
		return err
	}
	return nil
}

func (e *EqualsCondition) GetAttribute() string {
	if e == nil {
		return ""
	}
	return e.Attribute
}

func (e *EqualsCondition) GetOperation() Operation {
	if e == nil {
		return Operation("")
	}
	return e.Operation
}

func (e *EqualsCondition) GetValues() []any {
	if e == nil {
		return []any{}
	}
	return e.Values
}
