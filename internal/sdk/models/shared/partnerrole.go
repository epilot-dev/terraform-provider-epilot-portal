// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"github.com/epilot-dev/terraform-provider-epilot-portal/internal/sdk/internal/utils"
	"time"
)

type PartnerRoleType string

const (
	PartnerRoleTypePartnerRole PartnerRoleType = "partner_role"
)

func (e PartnerRoleType) ToPointer() *PartnerRoleType {
	return &e
}
func (e *PartnerRoleType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "partner_role":
		*e = PartnerRoleType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PartnerRoleType: %v", v)
	}
}

// PartnerRole - A role that appears in another organization's role list that can be assigned but not modified by the partner organization.
type PartnerRole struct {
	// date and time then the role will expire
	ExpiresAt *time.Time `json:"expires_at,omitempty"`
	// List of grants (permissions) applied to the role
	Grants []Grant `json:"grants"`
	// Format: <organization_id>:<slug>
	ID string `json:"id"`
	// Human-friendly name for the role
	Name string `json:"name"`
	// Id of an organization
	OrganizationID string  `json:"organization_id"`
	PartnerOrgID   *string `json:"partner_org_id,omitempty"`
	// URL-friendly name for the role
	Slug string          `json:"slug"`
	Type PartnerRoleType `json:"type"`
}

func (p PartnerRole) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(p, "", false)
}

func (p *PartnerRole) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &p, "", false, []string{"grants", "id", "name", "organization_id", "slug", "type"}); err != nil {
		return err
	}
	return nil
}

func (p *PartnerRole) GetExpiresAt() *time.Time {
	if p == nil {
		return nil
	}
	return p.ExpiresAt
}

func (p *PartnerRole) GetGrants() []Grant {
	if p == nil {
		return []Grant{}
	}
	return p.Grants
}

func (p *PartnerRole) GetID() string {
	if p == nil {
		return ""
	}
	return p.ID
}

func (p *PartnerRole) GetName() string {
	if p == nil {
		return ""
	}
	return p.Name
}

func (p *PartnerRole) GetOrganizationID() string {
	if p == nil {
		return ""
	}
	return p.OrganizationID
}

func (p *PartnerRole) GetPartnerOrgID() *string {
	if p == nil {
		return nil
	}
	return p.PartnerOrgID
}

func (p *PartnerRole) GetSlug() string {
	if p == nil {
		return ""
	}
	return p.Slug
}

func (p *PartnerRole) GetType() PartnerRoleType {
	if p == nil {
		return PartnerRoleType("")
	}
	return p.Type
}
