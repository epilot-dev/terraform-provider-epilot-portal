// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"errors"
	"fmt"
	"github.com/epilot-dev/terraform-provider-epilot-portal/internal/sdk/internal/utils"
)

type GrantConditionType string

const (
	GrantConditionTypeEqualsCondition GrantConditionType = "EqualsCondition"
)

// GrantCondition - An additional condition that must be met for the grant
type GrantCondition struct {
	EqualsCondition *EqualsCondition `queryParam:"inline" name:"GrantCondition"`

	Type GrantConditionType
}

func CreateGrantConditionEqualsCondition(equalsCondition EqualsCondition) GrantCondition {
	typ := GrantConditionTypeEqualsCondition

	return GrantCondition{
		EqualsCondition: &equalsCondition,
		Type:            typ,
	}
}

func (u *GrantCondition) UnmarshalJSON(data []byte) error {

	var equalsCondition EqualsCondition = EqualsCondition{}
	if err := utils.UnmarshalJSON(data, &equalsCondition, "", true, nil); err == nil {
		u.EqualsCondition = &equalsCondition
		u.Type = GrantConditionTypeEqualsCondition
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for GrantCondition", string(data))
}

func (u GrantCondition) MarshalJSON() ([]byte, error) {
	if u.EqualsCondition != nil {
		return utils.MarshalJSON(u.EqualsCondition, "", true)
	}

	return nil, errors.New("could not marshal union type GrantCondition: all fields are null")
}
