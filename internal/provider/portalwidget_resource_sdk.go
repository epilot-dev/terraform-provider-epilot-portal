// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package provider

import (
	tfTypes "github.com/epilot-dev/terraform-provider-epilot-portal/internal/provider/types"
	"github.com/epilot-dev/terraform-provider-epilot-portal/internal/sdk/models/shared"
	"github.com/hashicorp/terraform-plugin-framework/types"
)

func (r *PortalWidgetResourceModel) ToSharedPortalWidget() *shared.PortalWidget {
	var out shared.PortalWidget
	var entityWidgetSchemas *shared.EntityWidgetSchemas
	if r.Schemas != nil {
		var headline *shared.SchemasEntityWidgetHeadline
		if r.Schemas.Headline != nil {
			de := new(string)
			if !r.Schemas.Headline.De.IsUnknown() && !r.Schemas.Headline.De.IsNull() {
				*de = r.Schemas.Headline.De.ValueString()
			} else {
				de = nil
			}
			en := new(string)
			if !r.Schemas.Headline.En.IsUnknown() && !r.Schemas.Headline.En.IsNull() {
				*en = r.Schemas.Headline.En.ValueString()
			} else {
				en = nil
			}
			headline = &shared.SchemasEntityWidgetHeadline{
				De: de,
				En: en,
			}
		}
		var id string
		id = r.Schemas.ID.ValueString()

		var listIndex int64
		listIndex = r.Schemas.ListIndex.ValueInt64()

		schema := new(string)
		if !r.Schemas.Schema.IsUnknown() && !r.Schemas.Schema.IsNull() {
			*schema = r.Schemas.Schema.ValueString()
		} else {
			schema = nil
		}
		var subHeadline *shared.SchemasEntityWidgetSubHeadline
		if r.Schemas.SubHeadline != nil {
			de1 := new(string)
			if !r.Schemas.SubHeadline.De.IsUnknown() && !r.Schemas.SubHeadline.De.IsNull() {
				*de1 = r.Schemas.SubHeadline.De.ValueString()
			} else {
				de1 = nil
			}
			en1 := new(string)
			if !r.Schemas.SubHeadline.En.IsUnknown() && !r.Schemas.SubHeadline.En.IsNull() {
				*en1 = r.Schemas.SubHeadline.En.ValueString()
			} else {
				en1 = nil
			}
			subHeadline = &shared.SchemasEntityWidgetSubHeadline{
				De: de1,
				En: en1,
			}
		}
		typeVar := shared.SchemasEntityWidgetType(r.Schemas.Type.ValueString())
		entityWidgetSchemas = &shared.EntityWidgetSchemas{
			Headline:    headline,
			ID:          id,
			ListIndex:   listIndex,
			Schema:      schema,
			SubHeadline: subHeadline,
			Type:        typeVar,
		}
	}
	if entityWidgetSchemas != nil {
		out = shared.PortalWidget{
			EntityWidgetSchemas: entityWidgetSchemas,
		}
	}
	var contentWidgetSchemas *shared.ContentWidgetSchemas
	if r.Schemas != nil {
		content := new(string)
		if !r.Schemas.Content.IsUnknown() && !r.Schemas.Content.IsNull() {
			*content = r.Schemas.Content.ValueString()
		} else {
			content = nil
		}
		var headline1 *shared.SchemasContentWidgetHeadline
		if r.Schemas.Headline != nil {
			de2 := new(string)
			if !r.Schemas.Headline.De.IsUnknown() && !r.Schemas.Headline.De.IsNull() {
				*de2 = r.Schemas.Headline.De.ValueString()
			} else {
				de2 = nil
			}
			en2 := new(string)
			if !r.Schemas.Headline.En.IsUnknown() && !r.Schemas.Headline.En.IsNull() {
				*en2 = r.Schemas.Headline.En.ValueString()
			} else {
				en2 = nil
			}
			headline1 = &shared.SchemasContentWidgetHeadline{
				De: de2,
				En: en2,
			}
		}
		var id1 string
		id1 = r.Schemas.ID.ValueString()

		var listIndex1 int64
		listIndex1 = r.Schemas.ListIndex.ValueInt64()

		var subHeadline1 *shared.SchemasContentWidgetSubHeadline
		if r.Schemas.SubHeadline != nil {
			de3 := new(string)
			if !r.Schemas.SubHeadline.De.IsUnknown() && !r.Schemas.SubHeadline.De.IsNull() {
				*de3 = r.Schemas.SubHeadline.De.ValueString()
			} else {
				de3 = nil
			}
			en3 := new(string)
			if !r.Schemas.SubHeadline.En.IsUnknown() && !r.Schemas.SubHeadline.En.IsNull() {
				*en3 = r.Schemas.SubHeadline.En.ValueString()
			} else {
				en3 = nil
			}
			subHeadline1 = &shared.SchemasContentWidgetSubHeadline{
				De: de3,
				En: en3,
			}
		}
		typeVar1 := shared.SchemasContentWidgetType(r.Schemas.Type.ValueString())
		contentWidgetSchemas = &shared.ContentWidgetSchemas{
			Content:     content,
			Headline:    headline1,
			ID:          id1,
			ListIndex:   listIndex1,
			SubHeadline: subHeadline1,
			Type:        typeVar1,
		}
	}
	if contentWidgetSchemas != nil {
		out = shared.PortalWidget{
			ContentWidgetSchemas: contentWidgetSchemas,
		}
	}
	var schemas *shared.Schemas
	if r.Schemas != nil {
		var actions []shared.WidgetAction = []shared.WidgetAction{}
		for _, actionsItem := range r.Schemas.Actions {
			var id2 string
			id2 = actionsItem.ID.ValueString()

			de4 := new(string)
			if !actionsItem.Label.De.IsUnknown() && !actionsItem.Label.De.IsNull() {
				*de4 = actionsItem.Label.De.ValueString()
			} else {
				de4 = nil
			}
			en4 := new(string)
			if !actionsItem.Label.En.IsUnknown() && !actionsItem.Label.En.IsNull() {
				*en4 = actionsItem.Label.En.ValueString()
			} else {
				en4 = nil
			}
			label := shared.Label{
				De: de4,
				En: en4,
			}
			var rules []shared.WidgetActionRules = []shared.WidgetActionRules{}
			for _, rulesItem := range actionsItem.Rules {
				var attribute string
				attribute = rulesItem.Attribute.ValueString()

				var attributeValue string
				attributeValue = rulesItem.AttributeValue.ValueString()

				var entity string
				entity = rulesItem.Entity.ValueString()

				rules = append(rules, shared.WidgetActionRules{
					Attribute:      attribute,
					AttributeValue: attributeValue,
					Entity:         entity,
				})
			}
			type1 := shared.WidgetActionType(actionsItem.Type.ValueString())
			var url string
			url = actionsItem.URL.ValueString()

			actions = append(actions, shared.WidgetAction{
				ID:    id2,
				Label: label,
				Rules: rules,
				Type:  type1,
				URL:   url,
			})
		}
		var headline2 *shared.Headline
		if r.Schemas.Headline != nil {
			de5 := new(string)
			if !r.Schemas.Headline.De.IsUnknown() && !r.Schemas.Headline.De.IsNull() {
				*de5 = r.Schemas.Headline.De.ValueString()
			} else {
				de5 = nil
			}
			en5 := new(string)
			if !r.Schemas.Headline.En.IsUnknown() && !r.Schemas.Headline.En.IsNull() {
				*en5 = r.Schemas.Headline.En.ValueString()
			} else {
				en5 = nil
			}
			headline2 = &shared.Headline{
				De: de5,
				En: en5,
			}
		}
		var id3 string
		id3 = r.Schemas.ID.ValueString()

		var listIndex2 int64
		listIndex2 = r.Schemas.ListIndex.ValueInt64()

		var subHeadline2 *shared.SubHeadline
		if r.Schemas.SubHeadline != nil {
			de6 := new(string)
			if !r.Schemas.SubHeadline.De.IsUnknown() && !r.Schemas.SubHeadline.De.IsNull() {
				*de6 = r.Schemas.SubHeadline.De.ValueString()
			} else {
				de6 = nil
			}
			en6 := new(string)
			if !r.Schemas.SubHeadline.En.IsUnknown() && !r.Schemas.SubHeadline.En.IsNull() {
				*en6 = r.Schemas.SubHeadline.En.ValueString()
			} else {
				en6 = nil
			}
			subHeadline2 = &shared.SubHeadline{
				De: de6,
				En: en6,
			}
		}
		typeVar2 := shared.Type(r.Schemas.Type.ValueString())
		schemas = &shared.Schemas{
			Actions:     actions,
			Headline:    headline2,
			ID:          id3,
			ListIndex:   listIndex2,
			SubHeadline: subHeadline2,
			Type:        typeVar2,
		}
	}
	if schemas != nil {
		out = shared.PortalWidget{
			Schemas: schemas,
		}
	}
	var teaserWidgetSchemas *shared.TeaserWidgetSchemas
	if r.Schemas != nil {
		var button *shared.SchemasButton
		if r.Schemas.Button != nil {
			var label1 *shared.SchemasTeaserWidgetLabel
			if r.Schemas.Button.Label != nil {
				de7 := new(string)
				if !r.Schemas.Button.Label.De.IsUnknown() && !r.Schemas.Button.Label.De.IsNull() {
					*de7 = r.Schemas.Button.Label.De.ValueString()
				} else {
					de7 = nil
				}
				en7 := new(string)
				if !r.Schemas.Button.Label.En.IsUnknown() && !r.Schemas.Button.Label.En.IsNull() {
					*en7 = r.Schemas.Button.Label.En.ValueString()
				} else {
					en7 = nil
				}
				label1 = &shared.SchemasTeaserWidgetLabel{
					De: de7,
					En: en7,
				}
			}
			url1 := new(string)
			if !r.Schemas.Button.URL.IsUnknown() && !r.Schemas.Button.URL.IsNull() {
				*url1 = r.Schemas.Button.URL.ValueString()
			} else {
				url1 = nil
			}
			button = &shared.SchemasButton{
				Label: label1,
				URL:   url1,
			}
		}
		var headline3 *shared.SchemasTeaserWidgetHeadline
		if r.Schemas.Headline != nil {
			de8 := new(string)
			if !r.Schemas.Headline.De.IsUnknown() && !r.Schemas.Headline.De.IsNull() {
				*de8 = r.Schemas.Headline.De.ValueString()
			} else {
				de8 = nil
			}
			en8 := new(string)
			if !r.Schemas.Headline.En.IsUnknown() && !r.Schemas.Headline.En.IsNull() {
				*en8 = r.Schemas.Headline.En.ValueString()
			} else {
				en8 = nil
			}
			headline3 = &shared.SchemasTeaserWidgetHeadline{
				De: de8,
				En: en8,
			}
		}
		var id4 string
		id4 = r.Schemas.ID.ValueString()

		imageURL := new(string)
		if !r.Schemas.ImageURL.IsUnknown() && !r.Schemas.ImageURL.IsNull() {
			*imageURL = r.Schemas.ImageURL.ValueString()
		} else {
			imageURL = nil
		}
		var listIndex3 int64
		listIndex3 = r.Schemas.ListIndex.ValueInt64()

		var subHeadline3 *shared.SchemasTeaserWidgetSubHeadline
		if r.Schemas.SubHeadline != nil {
			de9 := new(string)
			if !r.Schemas.SubHeadline.De.IsUnknown() && !r.Schemas.SubHeadline.De.IsNull() {
				*de9 = r.Schemas.SubHeadline.De.ValueString()
			} else {
				de9 = nil
			}
			en9 := new(string)
			if !r.Schemas.SubHeadline.En.IsUnknown() && !r.Schemas.SubHeadline.En.IsNull() {
				*en9 = r.Schemas.SubHeadline.En.ValueString()
			} else {
				en9 = nil
			}
			subHeadline3 = &shared.SchemasTeaserWidgetSubHeadline{
				De: de9,
				En: en9,
			}
		}
		typeVar3 := shared.SchemasTeaserWidgetType(r.Schemas.Type.ValueString())
		teaserWidgetSchemas = &shared.TeaserWidgetSchemas{
			Button:      button,
			Headline:    headline3,
			ID:          id4,
			ImageURL:    imageURL,
			ListIndex:   listIndex3,
			SubHeadline: subHeadline3,
			Type:        typeVar3,
		}
	}
	if teaserWidgetSchemas != nil {
		out = shared.PortalWidget{
			TeaserWidgetSchemas: teaserWidgetSchemas,
		}
	}
	var documentWidgetSchemas *shared.DocumentWidgetSchemas
	if r.Schemas != nil {
		var headline4 *shared.SchemasDocumentWidgetHeadline
		if r.Schemas.Headline != nil {
			de10 := new(string)
			if !r.Schemas.Headline.De.IsUnknown() && !r.Schemas.Headline.De.IsNull() {
				*de10 = r.Schemas.Headline.De.ValueString()
			} else {
				de10 = nil
			}
			en10 := new(string)
			if !r.Schemas.Headline.En.IsUnknown() && !r.Schemas.Headline.En.IsNull() {
				*en10 = r.Schemas.Headline.En.ValueString()
			} else {
				en10 = nil
			}
			headline4 = &shared.SchemasDocumentWidgetHeadline{
				De: de10,
				En: en10,
			}
		}
		var id5 string
		id5 = r.Schemas.ID.ValueString()

		var listIndex4 int64
		listIndex4 = r.Schemas.ListIndex.ValueInt64()

		var subHeadline4 *shared.SchemasDocumentWidgetSubHeadline
		if r.Schemas.SubHeadline != nil {
			de11 := new(string)
			if !r.Schemas.SubHeadline.De.IsUnknown() && !r.Schemas.SubHeadline.De.IsNull() {
				*de11 = r.Schemas.SubHeadline.De.ValueString()
			} else {
				de11 = nil
			}
			en11 := new(string)
			if !r.Schemas.SubHeadline.En.IsUnknown() && !r.Schemas.SubHeadline.En.IsNull() {
				*en11 = r.Schemas.SubHeadline.En.ValueString()
			} else {
				en11 = nil
			}
			subHeadline4 = &shared.SchemasDocumentWidgetSubHeadline{
				De: de11,
				En: en11,
			}
		}
		typeVar4 := shared.SchemasDocumentWidgetType(r.Schemas.Type.ValueString())
		documentWidgetSchemas = &shared.DocumentWidgetSchemas{
			Headline:    headline4,
			ID:          id5,
			ListIndex:   listIndex4,
			SubHeadline: subHeadline4,
			Type:        typeVar4,
		}
	}
	if documentWidgetSchemas != nil {
		out = shared.PortalWidget{
			DocumentWidgetSchemas: documentWidgetSchemas,
		}
	}
	var paymentWidgetSchemas *shared.PaymentWidgetSchemas
	if r.Schemas != nil {
		var headline5 *shared.SchemasPaymentWidgetHeadline
		if r.Schemas.Headline != nil {
			de12 := new(string)
			if !r.Schemas.Headline.De.IsUnknown() && !r.Schemas.Headline.De.IsNull() {
				*de12 = r.Schemas.Headline.De.ValueString()
			} else {
				de12 = nil
			}
			en12 := new(string)
			if !r.Schemas.Headline.En.IsUnknown() && !r.Schemas.Headline.En.IsNull() {
				*en12 = r.Schemas.Headline.En.ValueString()
			} else {
				en12 = nil
			}
			headline5 = &shared.SchemasPaymentWidgetHeadline{
				De: de12,
				En: en12,
			}
		}
		var id6 string
		id6 = r.Schemas.ID.ValueString()

		var listIndex5 int64
		listIndex5 = r.Schemas.ListIndex.ValueInt64()

		var subHeadline5 *shared.SchemasPaymentWidgetSubHeadline
		if r.Schemas.SubHeadline != nil {
			de13 := new(string)
			if !r.Schemas.SubHeadline.De.IsUnknown() && !r.Schemas.SubHeadline.De.IsNull() {
				*de13 = r.Schemas.SubHeadline.De.ValueString()
			} else {
				de13 = nil
			}
			en13 := new(string)
			if !r.Schemas.SubHeadline.En.IsUnknown() && !r.Schemas.SubHeadline.En.IsNull() {
				*en13 = r.Schemas.SubHeadline.En.ValueString()
			} else {
				en13 = nil
			}
			subHeadline5 = &shared.SchemasPaymentWidgetSubHeadline{
				De: de13,
				En: en13,
			}
		}
		typeVar5 := shared.SchemasPaymentWidgetType(r.Schemas.Type.ValueString())
		paymentWidgetSchemas = &shared.PaymentWidgetSchemas{
			Headline:    headline5,
			ID:          id6,
			ListIndex:   listIndex5,
			SubHeadline: subHeadline5,
			Type:        typeVar5,
		}
	}
	if paymentWidgetSchemas != nil {
		out = shared.PortalWidget{
			PaymentWidgetSchemas: paymentWidgetSchemas,
		}
	}
	var meterReadingWidgetSchemas *shared.MeterReadingWidgetSchemas
	if r.Schemas != nil {
		var headline6 *shared.SchemasMeterReadingWidgetHeadline
		if r.Schemas.Headline != nil {
			de14 := new(string)
			if !r.Schemas.Headline.De.IsUnknown() && !r.Schemas.Headline.De.IsNull() {
				*de14 = r.Schemas.Headline.De.ValueString()
			} else {
				de14 = nil
			}
			en14 := new(string)
			if !r.Schemas.Headline.En.IsUnknown() && !r.Schemas.Headline.En.IsNull() {
				*en14 = r.Schemas.Headline.En.ValueString()
			} else {
				en14 = nil
			}
			headline6 = &shared.SchemasMeterReadingWidgetHeadline{
				De: de14,
				En: en14,
			}
		}
		var id7 string
		id7 = r.Schemas.ID.ValueString()

		var listIndex6 int64
		listIndex6 = r.Schemas.ListIndex.ValueInt64()

		schema1 := new(string)
		if !r.Schemas.Schema.IsUnknown() && !r.Schemas.Schema.IsNull() {
			*schema1 = r.Schemas.Schema.ValueString()
		} else {
			schema1 = nil
		}
		var subHeadline6 *shared.SchemasMeterReadingWidgetSubHeadline
		if r.Schemas.SubHeadline != nil {
			de15 := new(string)
			if !r.Schemas.SubHeadline.De.IsUnknown() && !r.Schemas.SubHeadline.De.IsNull() {
				*de15 = r.Schemas.SubHeadline.De.ValueString()
			} else {
				de15 = nil
			}
			en15 := new(string)
			if !r.Schemas.SubHeadline.En.IsUnknown() && !r.Schemas.SubHeadline.En.IsNull() {
				*en15 = r.Schemas.SubHeadline.En.ValueString()
			} else {
				en15 = nil
			}
			subHeadline6 = &shared.SchemasMeterReadingWidgetSubHeadline{
				De: de15,
				En: en15,
			}
		}
		typeVar6 := shared.SchemasMeterReadingWidgetType(r.Schemas.Type.ValueString())
		meterReadingWidgetSchemas = &shared.MeterReadingWidgetSchemas{
			Headline:    headline6,
			ID:          id7,
			ListIndex:   listIndex6,
			Schema:      schema1,
			SubHeadline: subHeadline6,
			Type:        typeVar6,
		}
	}
	if meterReadingWidgetSchemas != nil {
		out = shared.PortalWidget{
			MeterReadingWidgetSchemas: meterReadingWidgetSchemas,
		}
	}
	var meterChartWidgetSchemas *shared.MeterChartWidgetSchemas
	if r.Schemas != nil {
		var headline7 *shared.SchemasMeterChartWidgetHeadline
		if r.Schemas.Headline != nil {
			de16 := new(string)
			if !r.Schemas.Headline.De.IsUnknown() && !r.Schemas.Headline.De.IsNull() {
				*de16 = r.Schemas.Headline.De.ValueString()
			} else {
				de16 = nil
			}
			en16 := new(string)
			if !r.Schemas.Headline.En.IsUnknown() && !r.Schemas.Headline.En.IsNull() {
				*en16 = r.Schemas.Headline.En.ValueString()
			} else {
				en16 = nil
			}
			headline7 = &shared.SchemasMeterChartWidgetHeadline{
				De: de16,
				En: en16,
			}
		}
		var id8 string
		id8 = r.Schemas.ID.ValueString()

		var listIndex7 int64
		listIndex7 = r.Schemas.ListIndex.ValueInt64()

		schema2 := new(string)
		if !r.Schemas.Schema.IsUnknown() && !r.Schemas.Schema.IsNull() {
			*schema2 = r.Schemas.Schema.ValueString()
		} else {
			schema2 = nil
		}
		var subHeadline7 *shared.SchemasMeterChartWidgetSubHeadline
		if r.Schemas.SubHeadline != nil {
			de17 := new(string)
			if !r.Schemas.SubHeadline.De.IsUnknown() && !r.Schemas.SubHeadline.De.IsNull() {
				*de17 = r.Schemas.SubHeadline.De.ValueString()
			} else {
				de17 = nil
			}
			en17 := new(string)
			if !r.Schemas.SubHeadline.En.IsUnknown() && !r.Schemas.SubHeadline.En.IsNull() {
				*en17 = r.Schemas.SubHeadline.En.ValueString()
			} else {
				en17 = nil
			}
			subHeadline7 = &shared.SchemasMeterChartWidgetSubHeadline{
				De: de17,
				En: en17,
			}
		}
		typeVar7 := shared.SchemasMeterChartWidgetType(r.Schemas.Type.ValueString())
		meterChartWidgetSchemas = &shared.MeterChartWidgetSchemas{
			Headline:    headline7,
			ID:          id8,
			ListIndex:   listIndex7,
			Schema:      schema2,
			SubHeadline: subHeadline7,
			Type:        typeVar7,
		}
	}
	if meterChartWidgetSchemas != nil {
		out = shared.PortalWidget{
			MeterChartWidgetSchemas: meterChartWidgetSchemas,
		}
	}
	var campaignWidgetSchemas *shared.CampaignWidgetSchemas
	if r.Schemas != nil {
		var button1 *shared.Button
		if r.Schemas.Button != nil {
			var label2 *shared.SchemasLabel
			if r.Schemas.Button.Label != nil {
				de18 := new(string)
				if !r.Schemas.Button.Label.De.IsUnknown() && !r.Schemas.Button.Label.De.IsNull() {
					*de18 = r.Schemas.Button.Label.De.ValueString()
				} else {
					de18 = nil
				}
				en18 := new(string)
				if !r.Schemas.Button.Label.En.IsUnknown() && !r.Schemas.Button.Label.En.IsNull() {
					*en18 = r.Schemas.Button.Label.En.ValueString()
				} else {
					en18 = nil
				}
				label2 = &shared.SchemasLabel{
					De: de18,
					En: en18,
				}
			}
			url2 := new(string)
			if !r.Schemas.Button.URL.IsUnknown() && !r.Schemas.Button.URL.IsNull() {
				*url2 = r.Schemas.Button.URL.ValueString()
			} else {
				url2 = nil
			}
			button1 = &shared.Button{
				Label: label2,
				URL:   url2,
			}
		}
		campaignID := new(string)
		if !r.Schemas.CampaignID.IsUnknown() && !r.Schemas.CampaignID.IsNull() {
			*campaignID = r.Schemas.CampaignID.ValueString()
		} else {
			campaignID = nil
		}
		var headline8 *shared.SchemasHeadline
		if r.Schemas.Headline != nil {
			de19 := new(string)
			if !r.Schemas.Headline.De.IsUnknown() && !r.Schemas.Headline.De.IsNull() {
				*de19 = r.Schemas.Headline.De.ValueString()
			} else {
				de19 = nil
			}
			en19 := new(string)
			if !r.Schemas.Headline.En.IsUnknown() && !r.Schemas.Headline.En.IsNull() {
				*en19 = r.Schemas.Headline.En.ValueString()
			} else {
				en19 = nil
			}
			headline8 = &shared.SchemasHeadline{
				De: de19,
				En: en19,
			}
		}
		var id9 string
		id9 = r.Schemas.ID.ValueString()

		imageUrl1 := new(string)
		if !r.Schemas.ImageURL.IsUnknown() && !r.Schemas.ImageURL.IsNull() {
			*imageUrl1 = r.Schemas.ImageURL.ValueString()
		} else {
			imageUrl1 = nil
		}
		var listIndex8 int64
		listIndex8 = r.Schemas.ListIndex.ValueInt64()

		var subHeadline8 *shared.SchemasSubHeadline
		if r.Schemas.SubHeadline != nil {
			de20 := new(string)
			if !r.Schemas.SubHeadline.De.IsUnknown() && !r.Schemas.SubHeadline.De.IsNull() {
				*de20 = r.Schemas.SubHeadline.De.ValueString()
			} else {
				de20 = nil
			}
			en20 := new(string)
			if !r.Schemas.SubHeadline.En.IsUnknown() && !r.Schemas.SubHeadline.En.IsNull() {
				*en20 = r.Schemas.SubHeadline.En.ValueString()
			} else {
				en20 = nil
			}
			subHeadline8 = &shared.SchemasSubHeadline{
				De: de20,
				En: en20,
			}
		}
		typeVar8 := shared.SchemasType(r.Schemas.Type.ValueString())
		campaignWidgetSchemas = &shared.CampaignWidgetSchemas{
			Button:      button1,
			CampaignID:  campaignID,
			Headline:    headline8,
			ID:          id9,
			ImageURL:    imageUrl1,
			ListIndex:   listIndex8,
			SubHeadline: subHeadline8,
			Type:        typeVar8,
		}
	}
	if campaignWidgetSchemas != nil {
		out = shared.PortalWidget{
			CampaignWidgetSchemas: campaignWidgetSchemas,
		}
	}
	return &out
}

func (r *PortalWidgetResourceModel) RefreshFromSharedPortalWidget(resp *shared.PortalWidget) {
	if resp.EntityWidgetSchemas != nil {
		r.Schemas = &tfTypes.Schemas{}
		if resp.EntityWidgetSchemas.Headline == nil {
			r.Schemas.Headline = nil
		} else {
			r.Schemas.Headline = &tfTypes.UpsertPortalConfigV3ActionLabel{}
			r.Schemas.Headline.De = types.StringPointerValue(resp.EntityWidgetSchemas.Headline.De)
			r.Schemas.Headline.En = types.StringPointerValue(resp.EntityWidgetSchemas.Headline.En)
		}
		r.Schemas.ID = types.StringValue(resp.EntityWidgetSchemas.ID)
		r.ID = r.Schemas.ID
		r.Schemas.ListIndex = types.Int64Value(resp.EntityWidgetSchemas.ListIndex)
		r.ListIndex = r.Schemas.ListIndex
		r.Schemas.Schema = types.StringPointerValue(resp.EntityWidgetSchemas.Schema)
		r.Schema = r.Schemas.Schema
		if resp.EntityWidgetSchemas.SubHeadline == nil {
			r.Schemas.SubHeadline = nil
		} else {
			r.Schemas.SubHeadline = &tfTypes.UpsertPortalConfigV3ActionLabel{}
			r.Schemas.SubHeadline.De = types.StringPointerValue(resp.EntityWidgetSchemas.SubHeadline.De)
			r.Schemas.SubHeadline.En = types.StringPointerValue(resp.EntityWidgetSchemas.SubHeadline.En)
		}
		r.Schemas.Type = types.StringValue(string(resp.EntityWidgetSchemas.Type))
	}
}
